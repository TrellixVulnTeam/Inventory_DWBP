{"version":3,"sources":["../../../projects/ngx-scrolltop/src/lib/ngx-scrolltop.core.service.ts","../../../projects/ngx-scrolltop/src/lib/ngx-scrolltop.component.ts","../../../projects/ngx-scrolltop/src/lib/ngx-scrolltop.directive.ts","../../../projects/ngx-scrolltop/src/lib/ngx-scrolltop.module.ts"],"names":["NgxScrollTopCoreService","document","this","scrolledFromTop","isBrowser","window","prototype","onWindowScroll","mode","show","position","_a","documentElement","scrollTop","_b","scrollingElement","classicMode","smartMode","innerHeight","scrollOffset","scrollToTop","scroll","top","left","behavior","Injectable","Inject","args","DOCUMENT","NgxScrollTopComponent","core","theme","Object","defineProperty","symbol","console","error","Component","selector","template","Input","HostListener","NgxScrollTopDirective","el","hideElement","showElement","onClick","nativeElement","style","display","Directive","ElementRef","NgModule","declarations","imports","CommonModule","providers","exports"],"mappings":"yYAUE,SAAAA,EAAsCC,GAAAC,KAAAD,SAAAA,EAJ9BC,KAAAC,iBAAkB,EAETD,KAAAE,UAAuC,oBAAXC,cAItCL,EAAAM,UAAAC,eAAA,SAAeC,WAChBC,GAAO,EACLC,GACyB,QAA7BC,EAAAT,KAAKD,SAASW,uBAAe,IAAAD,OAAA,EAAAA,EAAEE,aAA2C,QAAlCC,EAAIZ,KAAKD,SAASc,wBAAgB,IAAAD,OAAA,EAAAA,EAAED,WAC9E,OAAQL,GACN,IAAK,UACHC,EAAOP,KAAKc,YAAYN,GACxB,MACF,IAAK,QACHD,EAAOP,KAAKe,UAAUP,GAG1B,OAAOD,GAGDT,EAAAM,UAAAU,YAAA,SAAYN,GAOlB,SALIR,KAAKE,WAAaM,EAAWL,OAAOa,cAQlClB,EAAAM,UAAAW,UAAA,SAAUP,GAChB,IAAID,GAAO,EAeX,OAdiB,IAAbC,IACFD,GAAO,EACPP,KAAKC,iBAAkB,GAGrBD,KAAKC,iBAAmBD,KAAKiB,aAAeT,IAC9CD,GAAO,GAGLP,KAAKE,WAAaM,EAAgC,EAArBL,OAAOa,cACtChB,KAAKC,iBAAkB,EACvBD,KAAKiB,aAAeT,GAGfD,GAGFT,EAAAM,UAAAc,YAAA,WACDlB,KAAKE,WACPC,OAAOgB,OAAO,CAAEC,IAAK,EAAGC,KAAM,EAAGC,SAAU,qCAtDhDC,EAAAA,+EAMcC,EAAAA,OAAMC,KAAA,CAACC,EAAAA,gCC0BpB,SAAAC,EAAoBC,GAAA5B,KAAA4B,KAAAA,EAXJ5B,KAAAQ,SAAiC,QACjCR,KAAA6B,MAA2B,OAC3B7B,KAAAM,KAAyB,UAElCN,KAAAO,MAAO,SAZduB,OAAAC,eAAoBJ,EAAAvB,UAAA,SAAM,KAA1B,SAA2B4B,GACzBC,QAAQC,MACN,wCAAyCF,EAAM,uEAC/C,sDACA,kBAAkBA,EAAM,2BACxB,mGAUGL,EAAAvB,UAAAC,eAAA,WACLL,KAAKO,KAAOP,KAAK4B,KAAKvB,eAAeL,KAAKM,OAKrCqB,EAAAvB,UAAAc,YAAA,WACLlB,KAAK4B,KAAKV,wCA/BbiB,EAAAA,UAASV,KAAA,CAAC,CACTW,SAAU,gBACVC,SAAA,mkNATOvC,8CAaNwC,EAAAA,2BACAA,EAAAA,oBACAA,EAAAA,sBACAA,EAAAA,wBAQAA,EAAAA,qBACAA,EAAAA,oBACAA,EAAAA,8BAIAC,EAAAA,aAAYd,KAAA,CAAC,qCCrBd,SAAAe,EAAoBC,EAAwBb,GAAxB5B,KAAAyC,GAAAA,EAAwBzC,KAAA4B,KAAAA,EAFV5B,KAAAM,KAAyB,UAGzDN,KAAK0C,qBAIAF,EAAApC,UAAAC,eAAA,WACDL,KAAK4B,KAAKvB,eAAeL,KAAKM,MAChCN,KAAK2C,cAEL3C,KAAK0C,eAKFF,EAAApC,UAAAwC,QAAA,WACL5C,KAAKkB,eAGCsB,EAAApC,UAAAsC,YAAA,WACN1C,KAAKyC,GAAGI,cAAcC,MAAMC,QAAU,QAGhCP,EAAApC,UAAAuC,YAAA,WACN3C,KAAKyC,GAAGI,cAAcC,MAAMC,QAAU,IAGhCP,EAAApC,UAAAc,YAAA,WACNlB,KAAK4B,KAAKV,wCAjCb8B,EAAAA,UAASvB,KAAA,CAAC,CACTW,SAAU,8DALQa,EAAAA,kBACXnD,mCAONwC,EAAAA,MAAKb,KAAA,CAAC,4CAMNc,EAAAA,aAAYd,KAAA,CAAC,kCASbc,EAAAA,aAAYd,KAAA,CAAC,kBCXhB,iCANCyB,EAAAA,SAAQzB,KAAA,CAAC,CACR0B,aAAc,CAACxB,EAAuBa,GACtCY,QAAS,CAACC,EAAAA,cACVC,UAAW,CAACxD,GACZyD,QAAS,CAAC5B,EAAuBa","sourcesContent":["import { DOCUMENT } from '@angular/common';\nimport { Inject, Injectable } from '@angular/core';\nimport { NgxScrollTopMode } from './ngx-scrolltop.interface';\n\n@Injectable()\nexport class NgxScrollTopCoreService {\n  private scrolledFromTop = false;\n  private scrollOffset: number;\n  private readonly isBrowser: boolean = typeof window !== 'undefined';\n\n  constructor(@Inject(DOCUMENT) private document: any) {}\n\n  public onWindowScroll(mode: NgxScrollTopMode): boolean {\n    let show = false;\n    const position: number =\n      this.document.documentElement?.scrollTop || this.document.scrollingElement?.scrollTop;\n    switch (mode) {\n      case 'classic':\n        show = this.classicMode(position);\n        break;\n      case 'smart':\n        show = this.smartMode(position);\n        break;\n    }\n    return show;\n  }\n\n  private classicMode(position: number): boolean {\n    let show = false;\n    if (this.isBrowser && position > window.innerHeight) {\n      show = true;\n    } else {\n      show = false;\n    }\n    return show;\n  }\n\n  private smartMode(position: number): boolean {\n    let show = false;\n    if (position === 0) {\n      show = false;\n      this.scrolledFromTop = false;\n    }\n\n    if (this.scrolledFromTop && this.scrollOffset > position) {\n      show = true;\n    }\n\n    if (this.isBrowser && position > window.innerHeight * 2) {\n      this.scrolledFromTop = true;\n      this.scrollOffset = position;\n    }\n\n    return show;\n  }\n\n  public scrollToTop(): void {\n    if (this.isBrowser) {\n      window.scroll({ top: 0, left: 0, behavior: 'smooth' });\n    }\n  }\n}\n","import { Component, HostListener, Input } from '@angular/core';\nimport { NgxScrollTopCoreService } from './ngx-scrolltop.core.service';\nimport {\n  NgxScrollTopMode,\n  NgxScrollTopPosition,\n  NgxScrollTopTheme,\n} from './ngx-scrolltop.interface';\n\n@Component({\n  selector: 'ngx-scrolltop',\n  templateUrl: './ngx-scrolltop.component.html',\n  styleUrls: ['./ngx-scrolltop.component.scss'],\n})\nexport class NgxScrollTopComponent {\n  @Input() public backgroundColor: string;\n  @Input() public symbolColor: string;\n  @Input() public size: number;\n  @Input() public set symbol(symbol: string) {\n    console.error(\n      `NgxScrollTop: You are trying to set \\`${symbol}\\` as your symbol but Input \\`[symbol]=\"\\'â†‘\\'\"\\` is deprecated now.\\n\\r`,\n      `Use \\`Content projection\\` method, like this:\\n\\r\\n\\r`,\n      `<ngx-scrolltop>${symbol}</ngx-scrolltop>\\n\\r\\n\\r`,\n      `More info: https://github.com/bartholomej/ngx-scrolltop#symbol`\n    );\n  }\n  @Input() public position: NgxScrollTopPosition = 'right';\n  @Input() public theme: NgxScrollTopTheme = 'gray';\n  @Input() public mode: NgxScrollTopMode = 'classic';\n\n  public show = false;\n\n  @HostListener('window:scroll')\n  public onWindowScroll() {\n    this.show = this.core.onWindowScroll(this.mode);\n  }\n\n  constructor(private core: NgxScrollTopCoreService) {}\n\n  public scrollToTop(): void {\n    this.core.scrollToTop();\n  }\n}\n","import { Directive, ElementRef, HostListener, Input } from '@angular/core';\nimport { NgxScrollTopCoreService } from './ngx-scrolltop.core.service';\nimport { NgxScrollTopMode } from './ngx-scrolltop.interface';\n\n@Directive({\n  selector: '[ngxScrollTop]',\n})\nexport class NgxScrollTopDirective {\n  @Input('ngxScrollTopMode') public mode: NgxScrollTopMode = 'classic';\n\n  constructor(private el: ElementRef, private core: NgxScrollTopCoreService) {\n    this.hideElement();\n  }\n\n  @HostListener('window:scroll')\n  public onWindowScroll() {\n    if (this.core.onWindowScroll(this.mode)) {\n      this.showElement();\n    } else {\n      this.hideElement();\n    }\n  }\n\n  @HostListener('click')\n  public onClick() {\n    this.scrollToTop();\n  }\n\n  private hideElement(): void {\n    this.el.nativeElement.style.display = 'none';\n  }\n\n  private showElement(): void {\n    this.el.nativeElement.style.display = '';\n  }\n\n  private scrollToTop(): void {\n    this.core.scrollToTop();\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { NgxScrollTopComponent } from './ngx-scrolltop.component';\nimport { NgxScrollTopDirective } from './ngx-scrolltop.directive';\nimport { NgxScrollTopCoreService } from './ngx-scrolltop.core.service';\n\n@NgModule({\n  declarations: [NgxScrollTopComponent, NgxScrollTopDirective],\n  imports: [CommonModule],\n  providers: [NgxScrollTopCoreService],\n  exports: [NgxScrollTopComponent, NgxScrollTopDirective],\n})\nexport class NgxScrollTopModule {}\n"]}